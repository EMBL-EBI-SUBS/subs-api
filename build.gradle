buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.3'
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.2"
    id 'com.sourcemuse.mongo' version '1.0.0'

}

group 'uk.ac.ebi.subs'
version '0.4.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'application'

mainClassName = "uk.ac.ebi.subs.ApiApplication"

repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    compile("uk.ac.ebi.subs:subs-repository:0.2.0-SNAPSHOT")
    compile("uk.ac.ebi.subs:subs-processing-model:0.1.1-SNAPSHOT")

    compile("uk.ac.ebi.subs:subs-data-model:0.1.0-SNAPSHOT")
    compile("uk.ac.ebi.subs:subs-messaging:0.3.0-SNAPSHOT")
    compile("uk.ac.ebi.subs:validator-common:0.5.0-SNAPSHOT")

    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile 'org.springframework.data:spring-data-rest-hal-browser'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compile("com.fasterxml.jackson.module:jackson-module-afterburner:2.7.1")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.google.code.gson:gson:2.7")
    testCompile("org.yaml:snakeyaml:1.8")
    //bug in spring boot, see https://github.com/spring-projects/spring-boot/issues/6502

    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE'
    testCompile 'org.springframework.security:spring-security-test:4.2.3.RELEASE'

    testCompile("com.mashape.unirest:unirest-java:1.4.9")
    testCompile("uk.ac.ebi.subs:subs-test-categories:0.1.0-SNAPSHOT")

    compile 'de.codecentric:spring-boot-admin-starter-client:1.4.6'
    compile('uk.ac.ebi.tsc.aap.client:security:0.2.2-SNAPSHOT') {
        changing = true
    }
}

ext.gradle_env = hasProperty('env') ? env : 'dev'

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    runWithMongoDb = true
}

task(testsMakesDocs, type: Test) {
    jvmArgs "-Dspring.profiles.active=$gradle_env"
    outputs.dir snippetsDir
    useJUnit {
        includeCategories 'uk.ac.ebi.subs.DocumentationProducer'
    }
    testLogging {
        exceptionFormat = 'full'
    }
    runWithMongoDb = true
}

configure(testsMakesDocs) {
    group = "documentation"
    description = 'Run tests that generate documentation snippets'
}

ext.asciiDoctorIncludes = [study:'1',sample:'1',assay:'1',assayData:'1']

if (gradle_env == "test") {
    ext.asciiDoctorIncludes = [sample:'1']
}

asciidoctor {
    attributes 'snippets': snippetsDir
    sourceDir file('src/main/resources/docs')
    attributes (asciiDoctorIncludes);
    backends 'html5'
    inputs.dir snippetsDir
    dependsOn testsMakesDocs
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

processTestResources {
    filesMatching('application.yml') {
        expand(project.properties)
    }
}

publish {
    dependsOn assemble
}

springBoot {
    executable = true
}

mongo {
    mongoVersion = "3.4.3"
}

remotes {
    submission_dev {
        role('dev')
        host = 'wp-np2-d0'
    }
    submission_test {
        role('test')
        host = 'wp-np2-d1'
    }
    mac_subs_002 {
        role('dev2')
        host = 'mac-subs-002'
    }
}

ssh.settings {
    user = 'sub_adm'
}

if (project.hasProperty('sshKeyFile')) {
    ssh.settings.identity = new File(sshKeyFile)
}

if (project.hasProperty('sshPassphrase')) {
    ssh.settings.passphrase = sshPassphrase
}
task('externalCiTest', type: Test) {
    useJUnit {
        excludeCategories 'uk.ac.ebi.subs.RabbitMQDependentTest', 'uk.ac.ebi.subs.BioSamplesDependentTest'
    }
    testLogging {
        exceptionFormat = 'full'
    }
    runWithMongoDb = true
}

task deployJar(type: SshTask, dependsOn: 'build') {
    doLast {

        if (gradle_env == "dev") {

            File jarDeployDir = new File("/homes/sub_adm/tc_subs/submission-dev/jar")
            sshRun(jarDeployDir)

        } else if (gradle_env == "test") {

            File jarDeployDir = new File("/homes/sub_adm/tc_subs/submission-test/jar")
            sshRun(jarDeployDir)

        } else if (gradle_env == "dev2") {

            File jarDeployDir = new File("/data/subs-api/jar")
            sshRun(jarDeployDir)

        }
    }
    ssh.settings {
        knownHosts = allowAnyHosts
    }
}

private Object sshRun(File jarDeployDir) {
    ssh.run {
        session(remotes.role(gradle_env)) {
            println "Uploading jar $jar.archivePath.name to $jarDeployDir area on $remote"
            put(jar.archivePath.absolutePath, jarDeployDir.absolutePath)
            println "creating symbolic link to $jar.archiveName"
            def result = execute "ln -s -f $jarDeployDir/$jar.archiveName $jarDeployDir/$jar.baseName" + ".jar", ignoreError: true
            println result
            println "updating permissions of $jarDeployDir/$jar.archiveName"
            execute "chmod u+x $jarDeployDir/*", ignoreError: false
        }
    }
}


task printClasspath << {
    configurations.testCompile.each { println it }
}
